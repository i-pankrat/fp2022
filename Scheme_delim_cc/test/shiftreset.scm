; (use-modules (ice-9 control))
(require racket/control)


(display (* 2 (reset (+ 1 (shift k (k 5))))))
; (display (* 2 (reset (+ 1 5))))
; (display (* 2 (reset 6)))
; (display (* 2 6))
; (display 12)
(newline)

(display (+ 10 (reset (+ 2 (shift k (+ 100 (k (k 3))))))))
; (display (+ 10 (reset (+ 100 (+ 2 (+ 2 3))))))
; (display (+ 10 (reset (+ 100 (+ 2 5)))))
; (display (+ 10 (reset (+ 100 7))))
; (display (+ 10 (reset (107))))
; (display (+ 10 (107)))
; (display 117)
(newline)

(display (* 10 (reset (* 2 (shift g (* 5 (shift f (+ (f 1) 1))))))))
; (display (* 10 (reset (* 5 (shift f (+ (f 1) 1))))))
; (display (* 10 (+ (* 5 1) 1)))
; (display (* 10 (+ 5 1)))
; (display (* 10 6))
; (display 60)
(newline)

(display (let ((f (lambda (x) (shift k (k (k x))))))
    (+ 1 (reset (+ 10 (f 100))))))
; (display (+ 1 (reset (+ 10 ((lambda (x) (shift k (k (k x)))) 100)))))
; (display (+ 1 (reset (+ 10 (shift k (k (k 100)))))))
; (display (+ 1 (reset (+ 10 (+ 10 100)))))
; (display (+ 1 (reset (+ 10 110))))
; (display (+ 1 (reset 120)))
; (display (+ 1 120))
; (display 121)
(newline)

(display (reset (map (lambda (x) (* x x)) (shift f (f '(1 2 3 4 5 6))))))
(newline)